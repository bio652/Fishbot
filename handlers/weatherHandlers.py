from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext

from data import data
from states import states
from parsers import fishparse
from kbs import keyboards
from . import someMethods
from templ import texttemplates

weatherrt = Router()

@weatherrt.callback_query(F.data == "getweather")
async def getWeather(callback: types.CallbackQuery, state: FSMContext):
    if data.checkUser(callback.from_user.id):
        await state.set_state(states.GetWeather.day)
        await callback.message.edit_text("–ü–æ–≥–æ–¥–∞ –∑–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=keyboards.weatherMarkup)
    else:
        await callback.answer("–û—à–∏–±–∫–∞, –ø—Ä–æ–ø–∏—à–∏—Ç–µ /start")
        
@weatherrt.callback_query(states.GetWeather.day, F.data != 'fishback')
async def getWeather(callback: types.CallbackQuery, state: FSMContext):
    await state.clear()
    link = data.getLink(callback.from_user.id)
    day = int(callback.data)
    result = await fishparse.weatherParser(link, day, callback.from_user.id)
    DAYFORMES = ['—Å–µ–≥–æ–¥–Ω—è','–∑–∞–≤—Ç—Ä–∞','–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞','—á–µ—Ä–µ–∑ 2 –¥–Ω—è','—á–µ—Ä–µ–∑ 3 –¥–Ω—è']
    if result:
        if "NA" in result[1][0][1]:
            result[1][0][1] = "–ü–æ—Ä—ã–≤–æ–≤ –Ω–µ—Ç—É"
        if "NA" in result[1][1][1]:
            result[1][1][1] = "–ü–æ—Ä—ã–≤–æ–≤ –Ω–µ—Ç—É"
        if "NA" in result[1][2][1]:
            result[1][2][1] = "–ü–æ—Ä—ã–≤–æ–≤ –Ω–µ—Ç—É"
        if "NA" in result[1][3][1]:
            result[1][3][1] = "–ü–æ—Ä—ã–≤–æ–≤ –Ω–µ—Ç—É" 
        #sooo big message)   
        await callback.message.edit_text(f"""–í–∞–∂–Ω—ã–µ –ø–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ {DAYFORMES[day]}:
                                         
üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã:
 - –ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å: {result[0][0]}¬∞C,
 - –ì–ª—É–±–∏–Ω–∞: {result[0][1]}¬∞C.
                                         
üå¨ –í–µ—Ç–µ—Ä:
- üåÉ –ù–æ—á—å—é:
  - {result[1][0][0]}
  - {result[1][0][1]}
  - {result[1][0][2]}
  - üå¨ –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é: {result[2][0]}
  
- üåÑ –£—Ç—Ä–æ–º:
  - {result[1][1][0]}
  - {result[1][1][1]}
  - {result[1][1][2]}
  - üå¨ –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é: {result[2][1]}
  
- ‚õÖ –î–Ω—ë–º:
  - {result[1][2][0]}
  - {result[1][2][1]}
  - {result[1][2][2]}
  - üå¨ –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é: {result[2][2]}
  
- ‚ú® –í–µ—á–µ—Ä–æ–º:
  - {result[1][3][0]}
  - {result[1][3][1]}
  - {result[1][3][2]}
  - üå¨ –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é: {result[2][3]}

üåô –õ—É–Ω–∞:
- {result[3]}
""", reply_markup=keyboards.weatherbackMarkup)
    else: 
        await callback.answer("–û—à–∏–±–∫–∞ :(")